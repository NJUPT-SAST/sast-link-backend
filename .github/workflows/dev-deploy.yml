# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  pull_request:
    types:
      - closed

jobs:
  build:
    if: github.event.pull_request.merged
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        run: |
          docker buildx build --platform linux/amd64 -t sast/sast-link -f docker/Dockerfile --output type=docker,dest=image.tar .

      - name: Copy Docker image to server
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rlgoDzvc -i --delete"
          SOURCE: "./image.tar"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: /tmp/image.tar

      - name: Deploy in server
        uses: appleboy/ssh-action@v1.0.3
        env:
          WORKINGDIR: ${{ secrets.WORKINGDIR }}
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: true
          envs: WORKINGDIR
          script: |
            ### Notice: run for develop ###
            # Stop and remove existing container if it exists
            if [ "$(docker ps -aq -f name=sastlink)" ]; then
              docker stop sastlink
              docker rm sastlink
            fi
            # Remove existing image if it exists
            if [ "$(docker images -q sast/sast-link)" ]; then
              docker rmi sast/sast-link
            fi
            # Load the new image and run it
            # It will failed, for test
            docker load -i /tmp/image.tar
            docker run --restart always -d --name sastlink -p 8080:8080 -v $WORKINGDIR:/sastlink/config sast/sast-link

      - name: Send Success Message
        if: ${{ success() }}
        run: |
          bash ./scripts/webhook.sh \
          -u "${{ github.event.pull_request.html_url }}" \
          -w ${{ secrets.WEBHOOK_URL }} \
          -s sastlink -c "${{ github.event.pull_request.user.login }}" -f 'success' \
          -m "https://github.com/${{ github.repository }}/commit/${{ github.sha }}"

      - name: Send Fail Message
        if: ${{ failure() }}
        run: |
          bash ./scripts/webhook.sh \
          -u "${{ github.event.pull_request.html_url }}" \
          -w ${{ secrets.WEBHOOK_URL }} \
          -s sastlink -c "${{ github.event.pull_request.user.login }}" -f 'failure' \
          -m "https://github.com/${{ github.repository }}/commit/${{ github.sha }}"
